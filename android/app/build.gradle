plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
   keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.yoyo.yolx"
    compileSdkVersion flutter.compileSdkVersion
    flavorDimensions "abi"
    ndkVersion flutter.ndkVersion

    productFlavors {
        dev {
            dimension "abi"
            ndk { abiFilter "arm64-v8a" }
            resValue "string", "app_name", "Alga Dev"
        }
        arm {
            dimension "abi"
            ndk { abiFilter "armeabi-v7a" }
            resValue "string", "app_name", "Alga"
        }
        arm64 {
            dimension "abi"
            ndk { abiFilter "arm64-v8a" }
            resValue "string", "app_name", "Alga"
        }
        x86_64 {
            dimension "abi"
            applicationId "tech.laihz.alga"
            ndk { abiFilter "x86_64" }
            resValue "string", "app_name", "Alga"
        }
        universal {
            dimension "abi"
            applicationId "tech.laihz.alga"
            resValue "string", "app_name", "Alga"
        }
        aab {
            dimension "abi"
            applicationId "tech.laihz.alga"
            resValue "string", "app_name", "Alga"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            jniLibs.srcDirs=['src/main/jniLibs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.yoyo.yolx"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {}
    }

   signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(include: ['*.jar','*.so'], dir: 'libs')
    implementation 'org.bouncycastle:bcprov-jdk16:1.46'
}
